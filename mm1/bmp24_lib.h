#pragma once
#ifndef BMP24_LIB_H_INCLUDED
#define BMP24_LIB_H_INCLUDED

#include <string>

#ifdef _WIN32

#include <windows.h>

#else

#include <stdint.h>
typedef uint8_t  BYTE;
typedef uint16_t WORD;
typedef uint32_t DWORD;
typedef int32_t  LONG;

#pragma pack(push, 1)

typedef struct tagRGBTRIPLE
{
	BYTE rgbtBlue;
	BYTE rgbtGreen;
	BYTE rgbtRed;
} RGBTRIPLE;

typedef struct tagBITMAPFILEHEADER
{
	WORD bfType;
	DWORD bfSize;
	WORD bfReserved1;
	WORD bfReserved2;
	DWORD bfOffBits;
} BITMAPFILEHEADER;

typedef struct tagBITMAPINFOHEADER
{
	DWORD biSize;
	LONG biWidth;
	LONG biHeight;
	WORD biPlanes;
	WORD biBitCount;
	DWORD biCompression;
	DWORD biSizeImage;
	LONG biXPelsPerMeter;
	LONG biYPelsPerMeter;
	DWORD biClrUsed;
	DWORD biClrImportant;
} BITMAPINFOHEADER;

#pragma pack(pop)

#endif
class bmp24_file
{
public:
	bmp24_file(WORD width, WORD height);
	bmp24_file(WORD width, WORD height, std::string filename);
	~bmp24_file();
	void set_vertical_mirror(bool value);
	void write();
	void write(std::string filename);
	void set_pixel(WORD x, WORD y, RGBTRIPLE c);
	void set_pixel(WORD x, WORD y, BYTE r, BYTE g, BYTE b);
	RGBTRIPLE get_pixel(WORD x, WORD y);
	void get_pixel(WORD x, WORD y, RGBTRIPLE & c);
	void get_pixel(WORD x, WORD y, BYTE & r, BYTE & g, BYTE & b);

protected:
	BITMAPFILEHEADER file_header;
	BITMAPINFOHEADER info_header;
	WORD size_width;
	WORD size_height;
	std::string name;
	RGBTRIPLE ** color_array;
	RGBTRIPLE null_color;
	void common_init(WORD width, WORD height);
};

#endif // BMP24_LIB_H_INCLUDED

/* RGBTRIPLE - структура, описывающая цвет { rgbtBlue, rgbtGreen, rgbtRed }
 BITMAPFILEHEADER - структура, содержащая инф. о типе, размере и макете файла,
				который содержит аппаратно-независимый растровый формат DIB
				члены структуры: {	bfType - тип файла (must be BM :c)
									bfSize - определяет размер файла точечного рисунка в байтах
									bfReserved1, bfReserved2 - зарезервированы, должен быть 0
									bfOffBits - определяет смещение от начала битов точечного рисунка
										в структуре BITMAPFILEHEADER, в байтах
								 }
 BITMAPINFOHEADER - структура, содержащая инф. о размерах и цветовом формате
					  аппаратно-независимого растровый формата DIB
				члены структуры: {	bfSize	 -	определяет число байтов необходимое для структуры
									bfWidth	 -	определяет ширину точечного рисунка в пикселях.
												член структуры biWidth устанавливает ширину развернутого изображения из файла изображения формата JPEG или PNG , соответственно.
									biHeight -	устанавливает высоту точечного рисунка, в пикселях.Если положительное значение, точечный рисунок - восходящий аппаратно-независимый растровый формат(DIB),
												а его начало координат - левый нижний угол. Если отрицательное значение, точечный рисунок - нисходящий аппаратно-независимый растровый формат(DIB),
												а его начало координат - левый верхний угол. Если biHeight имеет отрицательное значение, которое указывает на нисходящий формат(DIB), параметр biCompression
												должен быть или BI_RGB или BI_BITFIELDS. Нисходящие растровые форматы(DIB) не могут сжиматься.
									biPlanes -  устанавливает число плоскостей целевого устройства.
									biBitCount - Устанавливает число битов на пиксель. Обуславливает число битов, которые определяют каждый пиксель и максимальное число цветов в точечном рисунке.
													Этот член структуры должен быть одним из нижеперечисленных значений.*/
/*													0	Windows 98 / Me, Windows 2000 / XP: Число битов на пиксель задается или подразумевается форматом изображения PNG или JPEG.
													1	Точечный рисунок является монохромным, а член bmiColors  структуры BITMAPINFO содержит две записи. Каждый бит в растровом массиве представляет пиксель.
														Если бит сброшен, пиксель отображается цветом первой записи в таблице bmiColors; если бит установлен, пиксель имеет цвет второй записи в таблице.
													4	Точечный рисунок имеет максимум 16 цветов, а член  bmiColors структуры BITMAPINFO содержит до 16 записей.Каждый пиксель в точечном рисунке представлен
														4 - битным индексом в таблице цветов.Например, если первый байт в точечном рисунке - 0x1F, он представляет два пикселя. Первый пиксель содержит цвет во
														второй записи таблицы, а второй пиксель содержит цвет в шестнадцатой записи таблицы.
													8	Точечный рисунок имеет максимум 256 цветов, а член  bmiColors структуры BITMAPINFO содержит до 256 записей.В этом случае, каждый байт в массиве представляет
														одиночный пиксель.
													16	Точечный рисунок имеет максимум 216 цветов.Если член biCompression  структуры BITMAPINFOHEADER равен BI_RGB, то член bmiColors  структуры BITMAPINFO имеет
														значение ПУСТО(NULL).Каждое слово(WORD) в массиве точечного рисунка представляет одиночный пиксель.Относительные интенсивности красного, зеленого и синего
														цвета представлены с пятью битами для каждого компонента цвета.Значение для синего находится в самых младших пяти битах, следующие пять битов для каждого
														зеленого и красного цвета.Старший значащий бит не используется.Таблица цветов bmiColors используется для того, чтобы оптимизировать цвета, используемые на
														устройствах основной палитры, и должна содержать число записей, заданных членом biClrUsed  структуры BITMAPINFOHEADER.
													Если член biCompression  структуры BITMAPINFOHEADER - BI_BITFIELDS, член структуры bmiColors содержит  три двойных слова(DWORD) маски цвета, которые,
													соответственно, определяют красную, зеленую и синюю компоненты  каждого пикселя.Каждое слово(WORD) в массиве точечного рисунка представляет одиночный пиксель.
													24	Точечный рисунок имеет максимум 2 24 цветов, а член bmiColors структуры BITMAPINFO имеет значение ПУСТО(NULL).Каждый 3 - байтовый триплет в массиве точечного
														рисунка представляет относительные интенсивности синего, зеленого и красного цвета, соответственно, для пикселя.Таблица цветов bmiColors  используется для того,
														чтобы оптимизировать цвета, используемые на устройствах основной палитры и должна содержать число записей, определяемых членом biClrUsed  структуры BITMAPINFOHEADER.
													32	Точечный рисунок имеет максимум 232 цветов.Если член biCompression  структуры BITMAPINFOHEADER равен BI_RGB, член bmiColors  структуры BITMAPINFO имеет значение
														ПУСТО(NULL).Каждое двойное слово(DWORD) в массиве точечного рисунка представляет относительные интенсивности синего, зеленого и красного цвета, соответственно, для
														пикселя.Старший байт в каждом двойном слове(DWORD) не используется.Таблица цветов bmiColors  используется для того, чтобы оптимизировать цвета, используемые на
														устройствах основной палитры и должна содержать число записей, определяемых членом biClrUsed  структуры BITMAPINFOHEADER. */
/*									biCompression - Определяет тип сжатия для сжатого идущего снизу вверх точечного рисунка(идущий сверху вниз аппаратно - независимый растровый формат(DIB) не может сжиматься).
													Этот член структуры может быть одним из нижеперечисленных значений.*/
/*													BI_RGB			Несжимаемый формат.
													BI_RLE8			Формат с кодированием длины серий(RLE) для точечных рисунков с 8 битами на пиксель(bpp).Этот сжатый формат - 2 - байтовый формат, состоящий из байта
																	числа элементов, сопровождаемого байтом, содержащим  индекс цвета.Подробную информацию см.в статье Сжатие точечного рисунка.
													BI_RLE4	RLE		формат для точечных рисунков с 4 битами на пиксель(bpp).Этот сжатый формат - 2 - байтовый формат, состоящий из байта числа элементов, сопровождаемый
																	двумя индексами цвета длиной в слово(DWORD).Подробную информацию см.в статье Сжатие точечного рисунка.
													BI_BITFIELDS	Определяет, что точечный рисунок не сжат и, что таблица цветов состоит из трех двойных слов(DWORD) маски цвета, которые задают красный, зеленый и синий компоненты цвета, соответственно, для каждого пикселя.Это правильно тогда, когда используются точечные рисунки с 16 - и 32 - битами на пиксель(bpp).
													BI_JPEG	Windows 98 / Me, Windows 2000 / XP: Указывает на то, что изображение имеет формат JPEG.
													BI_PNG	Windows 98 / Me, Windows 2000 / XP : Указывает на то, что изображение имеет формата PNG.*/
/*									biSizeImage - устанавливает размер изображения, в байтах.Он может быть установлен в нуль для BI_RGB точечных рисунков.
									biXPelsPerMeter - Устанавливает разрешающую способность по вертикали для принимающего устройства  точечного рисунка, в пикселях на метр. Приложение может использовать это
													  значение, чтобы выбирать битовый образ из группы ресурсов, который лучше всего соответствует характеристикам текущего устройства.
									biYPelsPerMeter - Устанавливает разрешающую способность по вертикали для принимающего устройства  точечного рисунка, в пикселях на метр.
									biClrUsed - Устанавливает число  индексов цвета в таблице цветов, которые фактически используются точечным рисунком.Если это значение равняется нулю, точечный рисунок
												использует максимальное число цветов, соответствующих значению члена структуры biBitCount для  метода сжатия, заданного членом biCompression.
												Если biClrUsed не нуль, а член структуры biBitCount - меньше чем 16, член структуры biClrUsed  устанавливает фактическое число цветов доступное графической
												машине или драйверу устройства.Если biBitCount  равен 16 или больше, член структуры biClrUsed  устанавливает размер используемый таблицей цветов для оптимизации
												системных цветовых палитр.Если biBitCount равняется 16 или 32, оптимальная цветовая палитра следует непосредственно за тремя двойными словами(DWORD) маски.
												Когда массив точечного рисунка следует непосредственно за структурой BITMAPINFO, это - сжатый точечный рисунок.На сжатые битовые образы ссылаются одиночным указателем.
												Сжатые точечные рисунки требуют, чтобы член структуры biClrUsed был или нулем или фактическим размером таблицы цветов.
									biClrImportant - Устанавливает число индексов цвета, которые требуются чтобы показать на экране точечный рисунок.Если это значение равняется нулю, требуются все цвета .*/
